STM = statement: <simple_statement> <complex_statement> <compound_statement>
name_stm = <item> <name_of_literal_item>
null_stm = <null>
assign = <assigment-statement>
procedure_call = <procedure-statement>
exit = <output-statement>
return = <return-statement>
goto = <go-to-statement>
entry_call = <entry-modifier>
delay = <stop-statement>
code = <direct-code-statement>
if = <conditional-statement>
case = <test-statement>
LOOP = <loop-statement>
block = <block-list>
accept = <exchange-statement>
select = <exchange-statement>
cond_entry = <conditional-statement>
begin = <BEGIN>
end = <END>
var = variable: <variable>
as_id_s = <name_of_literal_item>
as_name = <name_of_literal_item>
as_variant_s = <variant_part>
as_object = <subscript>
as_choice = <index-list>
var_id = <numeric-variable> 
variant = <status-variable>
variant_part = <index-list>
variant_s = <literal-variable>
tx_comments = <comments>
EXP = formulas: <formula>
EXP_CONSTRAINED = formulas: <formula>
EXP_VOID = formulas: <formulas>
numeric_literal = <numeric-formula>
aggregate = <structured-entry-list>
allocator = <overlay-list>
conversion = <CONVERT> <BIT> <BYTE>
qualified = <>
exp_s = <formula>
string_literal = <literal-variable> <declarator>
enum_literal_s = <numeric-formula>
TYPE_SPEC = descriptions: <description>
integer = <numeric-constant>
array = <array-declaration>
record = <file-declaration>
access = <input-statement>
derived = <status-item-description>
task_spec = <TASK>
fixed = <fixed-point-item-description>
float = <floating-point-item-description>
function = functions: <function>
function_call = <name-of-procedure>
as_param_s = <actual-input-parameter-list>
as_name_void = <name-of-procedure>
param_s = <*parameter-list>
as_param_assoc = <*parameter-list>
DESIGNATOR = <identifier>
DESIGNATOR_CHAR = <letter>
DEF_ID = <name>
DEF_OCCURRENCE = <letter>
entry_id = <constant>
task_body_id = <constant>
proc_id = <constant>
named_stm_id = <name_of_literal_item>
pragma = <test-statement>
pragma_id = <name-of-procedure>
pragma_s = <test-statement>

//abort = <>
//raise = <>