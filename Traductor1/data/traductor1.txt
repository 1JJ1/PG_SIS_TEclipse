STM = statement: <label> <simple_statement> <compound_statement>
name_stm = <label>
null_stm = <null_statement>
assign = <assigment_statement>
procedure_call = <procedure_call_statement>
exit = <exit_statement>
return = <return_statement>
goto = <goto_statement>
entry_call = <entry_call_statement>
delay = <delay_statement>
abort = <abort_statement>
raise = <raise_statement>
code = <code_statement>
if = <if_statement>
case = <case_statement>
LOOP = <loop_statement>
block = <block_statement>
accept = <accept_statement>
select = <select_statement>
cond_entry = <if_statement>
var = variable: <variable_name>
as_id_s = <var_id>
as_name = <name>
as_variant_s = <variant_part>
as_object = <indexed_component>
as_choice = <component_choice_list>
var_id = <identifier>
variant = <direct_name>
variant_part = <indexed_component>
variant_s = <attribute_reference>
tx_comments = <comments>
EXP = <expression>
EXP_CONSTRAINED = <relation>
EXP_VOID = <default_expression>
numeric_literal = <numeric_literal>
aggregate = <aggregate>
allocator = <allocator>
conversion = <type_conversion>
qualified = <qualified_expression>
exp_s = <basic_declaration>
string_literal = <string_literal> <string_element>
def_char = <character_literal>
enum_literal_s = <enumeration_literal_specification>
TYPE_SPEC = type_specification: <type_definition>
integer = <integer_type_definition>
array = <array_type_definition>
record = <record_type_definition>
access = <access_type_definition>
derived = <derived_type_definition>
task_spec = <enumeration_type_definition>
fixed = <real_type_definition>
float = <real_type_definition>
function = function: <function>
function_call = <function_call>
as_param_s = <actual_parameter_part>
as_name_void = <function_name>
param_s = <prefix>
as_param_assoc = <parameter_association>
DESIGNATOR = <designator>
DESIGNATOR_CHAR = <upper_case_letter> <lower_case_letter>
DEF_ID = <defining_identifier_list> <defining_identifier>
DEF_OCCURRENCE = <task_identifier>
entry_id = <entry_identifier>
task_body_id = <task_body>
proc_id = <protected_id>
named_stm_id = <statement_identifier>
pragma = <pragma>
pragma_id = pragma: <pragma_argument_association> 
pragma_s = pragma: <restriction_pragma>
