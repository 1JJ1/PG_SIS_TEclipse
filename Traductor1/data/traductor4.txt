<simple_statement> = STM
<compound_statement> = STM
<label> = name_stm
<null_statement> = null_stm
<assigment_statement> = assign
<procedure_call_statement> = procedure_call
<exit_statement> = exit
<return_statement> = return
<goto_statement>= goto
<entry_call_statement> = entry_call
<delay_statement> = delay
<abort_statement> = abort
<raise_statement> = raise
<code_statement> = code
<if_statement> = if
<case_statement> = case
<loop_statement> = LOOP
<block_statement> = block
<accept_statement> = accept
<select_statement> = select
<if_statement> = cond_entry
<variable_name> = var
<name> = as_name
<var_id> = as_id_s
<variant_part> = as_variant_s
<indexed_component> = as_object
<component_choice_list> = as_choice
<identifier> = var_id
<direct_name> = variant
<indexed_component> = variant_part
<attribute_reference> = variant_s
<comments> = tx_comments
<expression> = EXP
<number_declarator> 
<relation> = EXP_CONSTRAINED
<default_expression> = EXP_VOID
<numeric_literal> = numeric_literal
<aggregate> = aggregate
<allocator> = allocator
<type_conversion> = conversion
<qualified_expression> = qualified
<basic_declaration> = exp_s
<string_literal> = string_literal
<string_element> = string_literal
<character_literal> = def_char
<enumeration_literal_specification> = enum_literal_s
<type_definition> = TYPE_SPEC
<integer_type_definition> = integer
<array_type_definition> = array
<record_type_definition> = record
<access_type_definition> = access
<derived_type_definition> = derived
<enumeration_type_definition> = task_spec
<real_type_definition> = fixed
<real_type_definition> = float
<function> = function
<function_call> = function_call
<actual_parameter_part> = as_param_s
<function_name> = as_name_void
<prefix> = param_s
<parameter_association> = as_param_assoc
<designator> = DESIGNATOR
<upper_case_letter> = def_char
<lower_case_letter> = def_char
<defining_identifier_list> = DEF_ID
<defining_identifier> = DEF_ID
<task_identifier> = DEF_OCCURRENCE
<entry_identifier> = entry_id
<task_body> = task_body_id
<protected_id> = proc_id
<statement_identifier> = named_stm_id
<pragma> = pragma
<pragma_argument_association> = pragma_id
<restriction_pragma> = pragma_s
<begin> = begin
<end> = end
